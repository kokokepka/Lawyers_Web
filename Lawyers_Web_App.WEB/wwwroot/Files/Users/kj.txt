public class CategoriesRepository : IRepository<Category>
    {
        private LowyersContext db;

        public CategoriesRepository(LowyersContext db)
        {
            this.db = db;
        }

        public void Create(Category item)
        {
            db.Categories.Add(item);
        }

        public void Delete(int id)
        {
            Category category = db.Categories.FirstOrDefault(c => c.Id == id);
            if (category != null)
                db.Categories.Remove(category);
        }

        public IEnumerable<Category> Find(Func<Category, bool> predicate)
        {
            return db.Categories.Include(c => c.Сases)
               .Where(predicate).ToList();public class CategoriesRepository : IRepository<Category>
    {
        private LowyersContext db;

        public CategoriesRepository(LowyersContext db)
        {
            this.db = db;
        }

        public void Create(Category item)
        {
            db.Categories.Add(item);
        }

        public void Delete(int id)
        {
            Category category = db.Categories.FirstOrDefault(c => c.Id == id);
            if (category != null)
                db.Categories.Remove(category);
        }

        public IEnumerable<Category> Find(Func<Category, bool> predicate)
        {
            return db.Categories.Include(c => c.Сases)
               .Where(predicate).ToList();
        }

        public Category Get(int? id)
        {
            return db.Categories.Include(c => c.Сases).FirstOrDefault(c => c.Id == id);
        }

        public IEnumerable<Category> GetAll()
        {
            return db.Categories;
        }

        public void Update(Category item)
        {
            db.Entry(item).State = EntityState.Modified;
        }
    }
        }

        public Category Get(int? id)
        {
            return db.Categories.Include(c => c.Сases).FirstOrDefault(c => c.Id == id);
        }

        public IEnumerable<Category> GetAll()
        {
            return db.Categories;
        }

        public void Update(Category item)
        {
            db.Entry(item).State = EntityState.Modified;
        }
    }@if (Model.Count() == 0)
{
    <div class="text-center">
        <h1>Записей и событий нету.</h1>
    </div>
}
else
{
    <div class="text-center">
        <h1>Мои записи.</h1>
    </div>
    @foreach (var item in Model)
    {
        <div class="card" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">@item.DateTime.ToString()</h5>
                <h6 class="card-subtitle mb-2 text-muted">Подзаголовок карты</h6>
                <p class="card-text">@item.Text</p>
                <a href="#" class="card-link">Ссылка карты</a>
                <a href="#" class="card-link">Удалить</a>
            </div>
        </div>
    }
}
@*<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>
@Html.ActionLink("Новая запись", "MakeNote", "Other", new { }, new { @class = "addNote" });*@

@*<div class="row justify-content-md-center">
    <div class="col-md-auto">
        <a class="btn btn-outline-primary"
           asp-controller="Other"
           asp-action="MakeNote">
            @Html.ActionLink("Новая запись", "MakeNote", "Other", new { }, new { @class = "addNote" });
        </a>
    </div>
</div>*@

@*@section scripts
{
    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".addNote").click(function (e) {

                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
        })
    </script>
}
@Html.ActionLink(c.Name, "Details",
    new { id = c.Id }, new { @class = "compItem" })

<script type="text/javascript">
        $("#buttonForm").click(function (e) {
            $('#form').submit();
            $('#main_information').load('/PartialController/PartialView');
        });
    </script>*@